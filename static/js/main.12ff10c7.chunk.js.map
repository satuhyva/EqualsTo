{"version":3,"sources":["components/resultInDisplayFormat.js","components/MyButton.js","components/ButtonsPanel.js","components/InputPanel.js","components/ResultPanel.js","components/checkInputValidity.js","components/performCalculation.js","components/Calculator.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","result","console","log","resultToShow","includes","commaLocation","indexOf","pieces","replace","split","dotsRemovedFirstPiece","dotsRemovedSecondPiece","length","substring","charAt","exponential","tail","MyButton","title","dimension","onPressHandler","type","actionHandler","buttonStyles","containerNumber","alignItems","height","width","backgroundColor","flexDirection","justifyContent","borderRadius","containerLogic","text","fontSize","fontWeight","TouchableOpacity","onPress","View","style","Text","ButtonsPanel","calculatorWidth","buttonsPanelHeight","buttonDimension","addToInput","clearInput","backspace","calculateResult","tableStyles","StyleSheet","create","buttonsGridView","alignSelf","buttonsRowView","flex","buttonView1","buttonView2","InputPanel","panelHeight","marginSize","input","inputPanelStyles","panelView","marginBottom","output","i","fontSizeMultiplier","panelText","paddingRight","paddingLeft","paddingBottom","showInputWithStyle","ResultPanel","resultPanelStyles","resultStyle","resultInDisplayFormat","showResult","checkInputValidity","buttonTitle","openParentheses","changeInput","lastCharacter","character","calculateAdditions","string","pieceFirst","calculateSubtractions","pieceSecond","bigDecimal","add","beginning","ending","push","calculateMultiplies","subtract","calculateDivides","multiply","divide","performCalculation","modifiedString","lastIndexOf","shortenedDecimals","index","screenWidthUnscaled","Dimensions","get","scalingFactor","heightUnscaled","windowHeight","screenWidth","titleFontSize","calculatorStyles","viewColor","marginTop","titleStyle","color","bottom","Calculator","useState","setInput","setResult","setOpenParentheses","newInputValue","concat","characterToRemove","inputCommasReplacedWithDots","inputWithCommas","toString","App","StatusBar","barStyle","hidden","SafeAreaView","appStyles","React","Component","AppRegistry","registerComponent","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.12ff10c7.chunk.js","sourcesContent":["function resultInDisplayFormat(result) {\n    console.log('result', result)\n    let resultToShow = result\n    if (result !== 'Incomplete input!' && result !== 'Missing parentheses!') {\n        if (result.includes(',')) {\n            const commaLocation = result.indexOf(',')\n            if (commaLocation > 3 && commaLocation < 11) {\n                resultToShow = result.replace(/(\\d)(?=(\\d{3})+(?!\\d))/g, '$1.')\n                const pieces = resultToShow.split(',')\n                let dotsRemovedFirstPiece = pieces[0].replace(/\\./g,' ')\n                let dotsRemovedSecondPiece = pieces[1].replace(/\\./g,'')\n                if (dotsRemovedSecondPiece.length > 9) {\n                    dotsRemovedSecondPiece = dotsRemovedSecondPiece.substring(0,10)\n                }\n                resultToShow = dotsRemovedFirstPiece + ',' + dotsRemovedSecondPiece\n            } else if (commaLocation > 10) {\n                if (result.charAt(0) !== '-') {\n                    const pieces = resultToShow.split(',')\n                    const exponential = pieces[0].length - 1\n                    const tailLong = result.substring(1)\n                    let tail = tailLong.replace(/\\,/g,'')\n                    if (tail.length > 9) {\n                        tail = tail.substring(0,11)\n                    }\n                    if (tail.length === 0) {\n                        tail = '0'\n                    }\n                    resultToShow = result.charAt(0) + ',' + tail + ' E+' + exponential\n                } else {\n                    const pieces = resultToShow.split(',')\n                    const exponential = pieces[0].length - 2\n                    let tailLong = result.substring(2)\n                    let tail = tailLong.replace(/\\,/g,'')\n                    if (tail.length > 9) {\n                        tail = tail.substring(0,11)\n                    }\n                    if (tail.length === 0) {\n                        tail = '0'\n                    }\n                    resultToShow = result.charAt(0) + result.charAt(1) + ',' + tail + ' E+' + exponential\n                }\n            }\n        } else {\n            if (result.length > 3 && result.length < 11) {\n                resultToShow = result.replace(/(\\d)(?=(\\d{3})+(?!\\d))/g, '$1.')\n                resultToShow = resultToShow.replace(/\\./g,' ')\n            } else if (result.length > 10) {\n                if (result.charAt(0) !== '-') {\n                    const exponential = result.length - 1\n                    let tail = result.substring(1)\n                    while (true) {\n                        if (tail.charAt(tail.length - 1) === '0') {\n                            tail = tail.substring(0,tail.length - 1)\n                        } else {\n                            break\n                        }\n                    }\n                    if (tail.length > 9) {\n                        tail = tail.substring(0,11)\n                    }\n                    if (tail.length === 0) {\n                        tail = '0'\n                    }\n                    resultToShow = result.charAt(0) + ',' + tail + ' E+' + exponential\n                } else {\n                    const exponential = result.length - 2\n                    let tail = result.substring(2)\n                    while (true) {\n                        if (tail.charAt(tail.length - 1) === '0') {\n                            tail = tail.substring(0,tail.length - 1)\n                        } else {\n                            break\n                        }\n                    }\n                    if (tail.length > 9) {\n                        tail = tail.substring(0,11)\n                    }\n                    if (tail.length === 0) {\n                        tail = '0'\n                    }\n                    resultToShow = result.charAt(0) + result.charAt(1) + ',' + tail + ' E+' + exponential\n                }\n            }\n        }\n        return resultToShow\n    } else {\n        return result\n    }\n}\n\nmodule.exports = resultInDisplayFormat\n\n","import React from 'react'\nimport { TouchableOpacity, Text, View } from 'react-native'\n\nconst MyButton = ({ title, onPressHandler, dimension, type, actionHandler }) => {\n\n    const buttonStyles = {\n        containerNumber: {\n            alignItems: 'center',\n            height: dimension,\n            width: dimension,\n            backgroundColor: 'rosybrown',\n            flexDirection: 'column',\n            justifyContent: 'center',\n            borderRadius: 20,\n        },\n        containerLogic: {\n            alignItems: 'center',\n            height: dimension,\n            width: dimension,\n            backgroundColor: 'skyblue',\n            flexDirection: 'column',\n            justifyContent: 'center',\n            borderRadius: 20,\n        },\n        text: {\n            fontSize: dimension / 1.75,\n            fontWeight: 'bold',\n        },\n    }\n\n    return (\n        <TouchableOpacity onPress={() => actionHandler(title)}>\n            <View style={type === 'number' ? buttonStyles.containerNumber : buttonStyles.containerLogic}>\n                <Text style={buttonStyles.text}>{title}</Text>\n            </View>\n        </TouchableOpacity>\n    )\n}\n\nexport default MyButton\n","import React from 'react'\nimport { View, StyleSheet } from 'react-native'\nimport MyButton from './MyButton'\n\n\n\nconst ButtonsPanel = ({ calculatorWidth, buttonsPanelHeight, buttonDimension, addToInput, clearInput, backspace, calculateResult }) => {\n\n    const tableStyles = StyleSheet.create({\n        buttonsGridView: {\n            width: calculatorWidth,\n            alignSelf: 'center',\n            height: buttonsPanelHeight,\n        },\n        buttonsRowView: {\n            flex: 1,\n            flexDirection: 'row',\n            justifyContent: 'space-between',\n            width: calculatorWidth,\n        },\n        buttonView1: {\n            height: buttonDimension,\n            width: buttonDimension,\n            backgroundColor: 'powderblue',\n            flexDirection: 'column',\n            justifyContent: 'center',\n            borderRadius: 20,\n        },\n        buttonView2: {\n            height: buttonDimension,\n            width: buttonDimension,\n            backgroundColor: 'skyblue',\n            flexDirection: 'column',\n            justifyContent: 'center',\n            borderRadius: 20,\n        },\n    })\n\n    return (\n        <>\n            <View style={tableStyles.buttonsGridView}>\n                <View style={tableStyles.buttonsRowView}>\n                    <MyButton title=\"C\" dimension={buttonDimension} type=\"clear\" actionHandler={clearInput}/>\n                    <MyButton title=\"(\" dimension={buttonDimension} type=\"logic\" actionHandler={addToInput}/>\n                    <MyButton title=\")\" dimension={buttonDimension} type=\"logic\" actionHandler={addToInput}/>\n                    <MyButton title=\"<-\" dimension={buttonDimension} type=\"backspace\" actionHandler={backspace}/>\n                </View>\n                <View style={tableStyles.buttonsRowView}>\n                    <MyButton title=\"+\" dimension={buttonDimension} type=\"logic\" actionHandler={addToInput}/>\n                    <MyButton title=\"7\" dimension={buttonDimension} type=\"number\" actionHandler={addToInput}/>\n                    <MyButton title=\"8\" dimension={buttonDimension} type=\"number\" actionHandler={addToInput}/>\n                    <MyButton title=\"9\" dimension={buttonDimension} type=\"number\" actionHandler={addToInput}/>\n                </View>\n                <View style={tableStyles.buttonsRowView}>\n                    <MyButton title=\"-\" dimension={buttonDimension} type=\"logic\" actionHandler={addToInput}/>\n                    <MyButton title=\"4\" dimension={buttonDimension} type=\"number\" actionHandler={addToInput}/>\n                    <MyButton title=\"5\" dimension={buttonDimension} type=\"number\" actionHandler={addToInput}/>\n                    <MyButton title=\"6\" dimension={buttonDimension} type=\"number\" actionHandler={addToInput}/>\n                </View>\n                <View style={tableStyles.buttonsRowView}>\n                    <MyButton title=\"*\" dimension={buttonDimension} type=\"logic\" actionHandler={addToInput}/>\n                    <MyButton title=\"1\" dimension={buttonDimension} type=\"number\" actionHandler={addToInput}/>\n                    <MyButton title=\"2\" dimension={buttonDimension} type=\"number\" actionHandler={addToInput}/>\n                    <MyButton title=\"3\" dimension={buttonDimension} type=\"number\" actionHandler={addToInput}/>\n                </View>\n                <View style={tableStyles.buttonsRowView}>\n                    <MyButton title=\"/\" dimension={buttonDimension} type=\"logic\" actionHandler={addToInput}/>\n                    <MyButton title=\",\" dimension={buttonDimension} type=\"logic\" actionHandler={addToInput}/>\n                    <MyButton title=\"=\" dimension={buttonDimension} type=\"enter\" actionHandler={calculateResult}/>\n                    <MyButton title=\"0\" dimension={buttonDimension} type=\"number\" actionHandler={addToInput}/>\n                </View>\n            </View>\n        </>\n    )\n}\n\nexport default ButtonsPanel\n\n","import React from 'react'\nimport { View, StyleSheet, Text } from 'react-native'\n\n\nconst InputPanel = ({ calculatorWidth, panelHeight, marginSize, input }) => {\n\n    const inputPanelStyles = StyleSheet.create({\n        panelView: {\n            width: calculatorWidth,\n            alignSelf: 'center',\n            height: panelHeight * 1.9,\n            backgroundColor: 'skyblue',\n            marginBottom: marginSize,\n            borderRadius: 20,\n            flexDirection: 'row',\n            justifyContent: 'flex-end',\n        },\n    })\n\n    const showInputWithStyle = () => {\n\n        let output = ''\n        for (let i = 0; i < input.length; i++) {\n            if (input[i] === '+' || input[i] === '-' || input[i] === '*' || input[i] === '/') {\n                output = output + ' ' + input[i] + ' '\n            } else {\n                output = output + input[i]\n            }\n        }\n\n        let fontSizeMultiplier = 1\n        if (output.length > 4 * 18 && output.length <= 5 * 23) {\n            fontSizeMultiplier = 0.8\n        } else if (output.length > 5 * 23) {\n            fontSizeMultiplier = 0.6\n        }\n\n        const panelText = {\n            flexDirection: 'column',\n            alignSelf: 'flex-end',\n            fontSize: calculatorWidth / 12 * fontSizeMultiplier,\n            paddingRight: marginSize,\n            paddingLeft: marginSize,\n            paddingBottom: marginSize,\n        }\n\n\n\n        return <Text style={panelText}>{output}</Text>\n    }\n\n    return (\n        <>\n            <View style={inputPanelStyles.panelView}>\n                {showInputWithStyle()}\n            </View>\n        </>\n    )\n}\n\nexport default InputPanel\n","import React from 'react'\nimport { View, StyleSheet, Text } from 'react-native'\nimport resultInDisplayFormat from './resultInDisplayFormat'\n\nconst ResultPanel = ({ calculatorWidth, panelHeight, marginSize, result }) => {\n\n    const resultPanelStyles = StyleSheet.create({\n        panelView: {\n            width: calculatorWidth,\n            alignSelf: 'center',\n            height: panelHeight / 1.5,\n            backgroundColor: 'skyblue',\n            marginBottom: marginSize,\n            borderRadius: calculatorWidth / 30,\n            flexDirection: 'row',\n            justifyContent: 'flex-end',\n        },\n    })\n\n    const showResult = () => {\n        let fontSizeMultiplier = 1\n        if (result.length > 13) {\n            if (result.length > 20) {\n                fontSizeMultiplier = 13 / 20\n            } else {\n                fontSizeMultiplier = 13 / result.length\n            }\n        }\n        const resultStyle = {\n            flexDirection: 'column',\n            alignSelf: 'center',\n            fontSize: calculatorWidth / 10 * fontSizeMultiplier,\n            paddingRight: marginSize,\n            paddingLeft: marginSize,\n            fontWeight: 'bold',\n        }\n        return <Text style={resultStyle}>{resultInDisplayFormat(result)}</Text>\n    }\n\n    return (\n        <>\n            <View style={resultPanelStyles.panelView}>\n                {showResult()}\n            </View>\n        </>\n    )\n}\n\nexport default ResultPanel\n\n","const checkInputValidity = (input, buttonTitle, openParentheses ) => {\n\n    let changeInput = true\n\n    if (input.length === 210) {\n        changeInput = false\n    }\n    if (input.length > 0) {\n        const lastCharacter = input.charAt(input.length - 1)\n        switch (buttonTitle) {\n        case '(':\n            if (!(lastCharacter === '(' || lastCharacter === '+' || lastCharacter === '-'\n                || lastCharacter === '*' || lastCharacter === '/')) {\n                changeInput = false\n            }\n            break\n        case ')':\n            if ((lastCharacter === '(' || lastCharacter === '+' || lastCharacter === '-'\n                || lastCharacter === '*' || lastCharacter === '/'  || lastCharacter === ',')) {\n                changeInput = false\n            } else {\n                if (openParentheses === 0) {\n                    changeInput = false\n                }\n            }\n            break\n        case '+':\n            if ((lastCharacter === '(' || lastCharacter === '+' || lastCharacter === '-'\n                || lastCharacter === '*' || lastCharacter === '/'  || lastCharacter === ',')) {\n                changeInput = false\n            }\n            break\n        case '-':\n            if ((lastCharacter === '-' || lastCharacter === ',')) {\n                changeInput = false\n            }\n            break\n        case '*': case '/':\n            if ((lastCharacter === '-' || lastCharacter === ',' || lastCharacter === '+'\n                || lastCharacter === '(' || lastCharacter === '*' || lastCharacter === '/')) {\n                changeInput = false\n            }\n            break\n        case ',':\n            if ((lastCharacter === '-' || lastCharacter === ',' || lastCharacter === '+'\n                || lastCharacter === '(' || lastCharacter === '*' || lastCharacter === '/'\n                || lastCharacter === ')')) {\n                changeInput = false\n            } else {\n                let i = input.length - 2\n                while (i >= 0) {\n                    const character = input.charAt(i)\n                    if (character === ',') {\n                        changeInput = false\n                        i = 0\n                    } else if (character === '+' || character === '-' || character === '*'\n                        || character === '/' || character === '(' || character === ')') {\n                        i = 0\n                    }\n                    i--\n                }\n            }\n            break\n        case '0': case '1': case '2': case '3': case '4': case '5': case '6': case '7': case '8': case '9':\n            if (lastCharacter === ')') {\n                changeInput = false\n            }\n            break\n        default:\n        }\n    } else {\n        if (buttonTitle === ')' || buttonTitle === '*' ||\n            buttonTitle === '/' || buttonTitle === ',' ||\n            buttonTitle === '+' ) {\n            changeInput = false\n        }\n    }\n\n    return changeInput\n\n}\n\nexport default checkInputValidity\n","import bigDecimal from 'js-big-decimal'\n\nconst  performCalculation = (string) => {\n    let modifiedString = string\n    while (modifiedString.includes('(')) {\n        const beginning = modifiedString.lastIndexOf('(')\n        const ending = modifiedString.indexOf(')', beginning)\n        modifiedString = modifiedString.substring(0, beginning) +\n            calculateAdditions(modifiedString.substring(beginning + 1, ending))\n            + modifiedString.substring(ending + 1)\n    }\n    const result = calculateAdditions(modifiedString)\n    // console.log('result', result)\n    if (result.includes('.')) {\n        const pieces = result.split('.')\n        // console.log(pieces)\n        let shortenedDecimals = pieces[1]\n        let index = shortenedDecimals.length - 1\n        while (true) {\n            if (shortenedDecimals.charAt(index) === '0' && index !== 0) {\n                shortenedDecimals = shortenedDecimals.substring(0, index)\n                index--\n            } else {\n                break\n            }\n        }\n        return pieces[0] + '.' + shortenedDecimals\n    } else {\n        return result\n    }\n}\n\n\nconst calculateAdditions = (string) => {\n    if (string.includes('+')) {\n        let pieces = string.split('+')\n        let result = 0\n        for (let i = 0; i < pieces.length - 1; i++) {\n            const pieceFirst = calculateSubtractions(pieces[i])\n            const pieceSecond = calculateSubtractions(pieces[i + 1])\n            if (i === 0) {\n                result = pieceFirst\n            }\n            if (pieceFirst === 'Null error' || pieceSecond === 'Null error') {\n                return 'Null error'\n            }\n            result = bigDecimal.add(result, pieceSecond)\n        }\n        return result\n    } else {\n        const result = calculateSubtractions(string)\n        return result\n    }\n}\n\nconst calculateSubtractions = (string) => {\n    let beginning = 0\n    let ending = 0\n    let pieces = []\n    for (let i = 1; i < string.length; i++) {\n        if (string.charAt(i) === '-' && string.charAt(i - 1) !== '*' && string.charAt(i - 1) !== '/') {\n            ending = i\n            pieces.push(string.substring(beginning, ending))\n            beginning = i + 1\n        }\n    }\n    if (beginning <= string.length - 1) {\n        pieces.push(string.substring(beginning, string.length))\n    }\n    let result = 0\n    if (pieces.length > 1) {\n        for (let i = 0; i < pieces.length - 1; i++) {\n            const pieceFirst = calculateMultiplies(pieces[i])\n            const pieceSecond = calculateMultiplies(pieces[i + 1])\n            if (i === 0) {\n                result = pieceFirst\n            }\n            if (pieceFirst === 'Null error' || pieceSecond === 'Null error') {\n                return 'Null error'\n            }\n            result = bigDecimal.subtract(result, pieceSecond)\n        }\n        return result\n    } else {\n        result = calculateMultiplies(string)\n        return result\n    }\n}\n\nconst calculateMultiplies = (string) => {\n    if (string.includes('*')) {\n        let pieces = string.split('*')\n        let result = 0\n        for (let i = 0; i < pieces.length - 1; i++) {\n            const pieceFirst = calculateDivides(pieces[i])\n            const pieceSecond = calculateDivides(pieces[i + 1])\n            if (i === 0) {\n                result = pieceFirst\n            }\n            if (pieceFirst === 'Null error' || pieceSecond === 'Null error') {\n                return 'Null error'\n            }\n            result = bigDecimal.multiply(result, pieceSecond)\n        }\n        return result\n    } else {\n        let result = calculateDivides(string)\n        return result\n    }\n}\n\nconst calculateDivides = (string) => {\n    if (string.includes('/')) {\n        let pieces = string.split('/')\n        let result = 0\n        for (let i = 0; i < pieces.length - 1; i++) {\n            if (i === 0) {\n                result = pieces[i]\n            }\n            if (pieces[i + 1] === '0') {\n                return 'Null error'\n            }\n            result = bigDecimal.divide(result, pieces[i + 1], 32)\n        }\n        return result\n    } else {\n        return string\n    }\n}\n\n// module.exports = performCalculation\n\nexport default performCalculation\n\n\n\n","import React, { useState } from 'react'\nimport ButtonsPanel from './ButtonsPanel'\nimport InputPanel from './InputPanel'\nimport ResultPanel from './ResultPanel'\nimport { View, StyleSheet, Dimensions } from 'react-native'\nimport checkInputValidity from './checkInputValidity'\nimport performCalculation from './performCalculation'\n\nconst screenWidthUnscaled = Dimensions.get('window').width\nlet scalingFactor = 1\nlet heightUnscaled = (\n    screenWidthUnscaled * 0.95 * 0.95 / 4 * 1.9 + screenWidthUnscaled / 50\n    + screenWidthUnscaled * 0.95 * 0.95 / 4 / 1.5 + screenWidthUnscaled / 50\n    + screenWidthUnscaled * 0.95 * 0.95 / 4 * 5  + screenWidthUnscaled / 50 * 4\n)\nconst windowHeight = Dimensions.get('window').height\nif (heightUnscaled > windowHeight) {\n    scalingFactor = windowHeight / heightUnscaled\n}\n\nconst screenWidth = Dimensions.get('window').width * scalingFactor\nconst calculatorWidth = screenWidth * 0.95\nconst buttonDimension = calculatorWidth * 0.95 / 4\nconst spacing = calculatorWidth * 0.05 / 3\nconst buttonsPanelHeight = buttonDimension * 5 + spacing * 4\nconst marginSize = screenWidth / 50\nconst titleFontSize = calculatorWidth / 8\n\nconst calculatorStyles = StyleSheet.create({\n    viewColor: {\n        backgroundColor: 'black',\n        marginTop: 30,\n    },\n    titleStyle: {\n        color: 'powderblue',\n        alignSelf: 'center',\n        fontSize: titleFontSize,\n        fontWeight: 'bold',\n    },\n    bottom: {\n        height: 500,\n    },\n})\n\n\nconst Calculator = () => {\n    const [input, setInput] = useState('')\n    const [result, setResult] = useState('')\n    const [openParentheses, setOpenParentheses] = useState(0)\n\n    const addToInput = (buttonTitle) => {\n        if (result === 'Incomplete input!' || result === 'Missing parentheses!') {\n            setResult('')\n        }\n        // here we check if we can concatenate the user given character buttonTitle to our input\n        let changeInput = checkInputValidity(input, buttonTitle, openParentheses)\n        if (changeInput) {\n            const newInputValue = input.concat(buttonTitle)\n            setInput(newInputValue)\n            setResult('')\n            if (buttonTitle === '(') {\n                setOpenParentheses(openParentheses + 1)\n            } else if (buttonTitle === ')') {\n                setOpenParentheses(openParentheses - 1)\n            }\n        }\n    }\n\n    const clearInput = () => {\n        if (result === 'Incomplete input!' || result === 'Missing parentheses!') {\n            setResult('')\n        }\n        setInput('')\n        setResult('')\n        setOpenParentheses(0)\n    }\n\n    // here we remove the last added character\n    const backspace = () => {\n        if (result === 'Incomplete input!' || result === 'Missing parentheses!') {\n            setResult('')\n        }\n        const characterToRemove = input.charAt(input.length - 1)\n        if (characterToRemove === '(') {\n            setOpenParentheses(openParentheses - 1)\n        } else if (characterToRemove === ')') {\n            setOpenParentheses(openParentheses + 1)\n        }\n        const newInputValue = input.substring(0,input.length - 1)\n        setInput(newInputValue)\n        setResult('')\n    }\n\n    // here we calculate the result of the given formula IF it is ready\n    const calculateResult = () => {\n        if (input.length > 0) {\n            const lastCharacter = input.charAt(input.length - 1)\n            if (lastCharacter === '+' || lastCharacter === '-' || lastCharacter === '*'\n                || lastCharacter === '/' || lastCharacter === ',' ) {\n                setResult('Incomplete input!')\n            } else if (openParentheses !== 0) {\n                setResult('Missing parentheses!')\n            } else {\n                const inputCommasReplacedWithDots = input.replace(/,/g,'.')\n                const calculationResult = performCalculation(inputCommasReplacedWithDots)\n                const inputWithCommas = calculationResult.toString().replace(/\\./g,',')\n                setResult(inputWithCommas)\n            }\n        }\n    }\n\n\n    return (\n        <>\n            <View style={calculatorStyles.viewColor}>\n                <ResultPanel\n                    calculatorWidth={calculatorWidth}\n                    panelHeight={buttonDimension}\n                    marginSize={marginSize}\n                    result={result}\n                />\n                <InputPanel\n                    calculatorWidth={calculatorWidth}\n                    panelHeight={buttonDimension}\n                    marginSize={marginSize}\n                    input={input}\n                />\n                <ButtonsPanel\n                    calculatorWidth={calculatorWidth}\n                    buttonsPanelHeight={buttonsPanelHeight}\n                    buttonDimension={buttonDimension}\n                    addToInput={addToInput}\n                    clearInput={clearInput}\n                    backspace={backspace}\n                    calculateResult={calculateResult}\n                />\n                <View style={calculatorStyles.bottom} />\n            </View>\n\n        </>\n    )\n}\n\nexport default Calculator\n\n","\nimport React from 'react';\nimport {\n  AppRegistry,\n  StyleSheet,\n  StatusBar,\n  SafeAreaView,\n} from 'react-native';\nimport Calculator from '../src/components/Calculator'\n\n\n\nclass App extends React.Component {\n  render() {\n    return (\n      <>\n      <StatusBar barStyle=\"dark-content\" hidden=\"true\" />\n      <SafeAreaView style={appStyles.viewColor}>\n        <Calculator />\n      </SafeAreaView>\n    </>\n    );\n  }\n}\nconst appStyles = StyleSheet.create({\n  viewColor: {\n    backgroundColor: 'black',\n  },\n});\n\n\nAppRegistry.registerComponent('App', () => App);\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}